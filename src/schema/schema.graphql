type Query {
    estudiantes: [Estudiante!]!
    estudiante(id: ID!): Estudiante!
    cursos: [Course!]!
    curso(id: ID!): Course!
}

type Mutation {
    cursoNuevo(curso: CursoInput!): Course!
    modificarCurso(curso: CursoInput!): Course!
    eliminarCurso(id: ID!): Course!
}

input CursoInput {
    id: ID
    title: String!
    description: String!
    clases: Int!
    time: Float!
    logo: String!
    level: Nivel=ALL
    path: String!
    teacher: String!
}

type Estudiante {
    id: ID!
    name: String!
    email: String!
    website: String!
    courses: [Course!]!
}

type Course {
    id: ID!
    title: String!
    description: String!
    clases: Int!
    time: Float!
    logo: String!
    level: Nivel!
    path: String!
    teacher: String!
    students: [Estudiante!]!
    reviews: Valoracion!
}

enum Nivel {
    ALL
    BEGINNER
    MEDIUM
    EXPERT
}

type Valoracion {
    id: ID!
    name: String!
    points: Float!
    comment: String!
}